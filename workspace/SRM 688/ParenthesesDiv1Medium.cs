using System;
using System.Collections.Generic;
using System.Linq;
using System.Numerics;
using Debug = System.Diagnostics.Debug;
using StringBuilder = System.Text.StringBuilder;
public class ParenthesesDiv1Medium
{
    public int minSwaps(string s, int[] L, int[] R)
    {
        var n = L.Length;
        var A = new List<Pair<int, int>>();
        for (int i = 0; i < n; i++) A.Add(new Pair<int, int>(L[i], R[i] + 1));
        for (int i = 0; i < A.Count; i++)
        {
            for (int j = 0; j < A.Count; j++)
            {
                if (A[i].x < A[j].x && A[j].x < A[i].y && A[i].y < A[j].y)
                {
                    A.Add(new Pair<int, int>(A[i].y, A[j].y));
                    A[j].y = A[i].y;
                    A[i].y = A[j].x;
                }
            }

        }
        foreach (var x in A)
        {
            //Debug.WriteLine(x);
            if ((x.y - x.x) % 2 != 0)
                return -1;
        }
        return f(s.ToCharArray(), A.ToArray());
    }
    int f(char[] s, Pair<int, int>[] A)
    {
        var n = s.Length;
        var used = new bool[n];
        Array.Sort(A, (l, r) => (l.y - l.x).CompareTo(r.y - r.x));
        foreach (var x in A) for (int i = x.x; i < x.y; i++) used[i] = true;
        var a = 0; var b = 0;
        var c = 0; var d = 0;
        var ans = 0;
        for (int i = 0; i < n; i++)
            if (!used[i])
            {
                if (s[i] == '(') a++;
                else b++;
            }
        foreach (var x in A) for (int i = x.x; i < x.y; i++) used[i] = false;
        foreach (var lr in A)
        {
            //Debug.WriteLine(lr);
            var v = 0;
            for (int i = lr.x; i < lr.y; i++)
            {
                if (used[i]) continue;
                if (s[i] == '(') v++;
                else v--;
            }
            if (v > 0)
            {
                v /= 2;
                a += v; b -= v;
                c += v;
                for (int i = lr.y - 1; i >= lr.x && v > 0; i--)
                {
                    if (used[i]) continue;
                    if (s[i] == '(') { s[i] = ')'; v--; ans++; }
                }
            }
            else if (v < 0)
            {
                v /= 2;
                v *= -1;
                a -= v; b += v;
                d += v;
                for (int i = lr.x; i < lr.y && v > 0; i++)
                {
                    if (used[i]) continue;
                    if (s[i] == ')') { s[i] = '('; v--; ans++; }
                }
            }
            v = 0;
            for (int i = lr.x; i < lr.y; i++)
            {
                if (used[i]) continue;
                used[i] = true;
                if (s[i] == '(') v++;
                else v--;
                if (v < 0)
                {
                    ans++;
                    v += 2;
                    for (int j = lr.y - 1; j > i; j--)
                    {
                        if (used[j]) continue;
                        if (s[j] == '(') { Swap(ref s[i], ref s[j]); break; }
                    }
                }
            }

        }
        ans -= Math.Min(c, d);
        if (a < 0 || b < 0) return -1;

        return ans;
    }

    static public T[] Enumerate<T>(int n, Func<int, T> f) { var a = new T[n]; for (int i = 0; i < n; ++i) a[i] = f(i); return a; }
    static public void Swap<T>(ref T a, ref T b) { var tmp = a; a = b; b = tmp; }
}
static public class EnumerableEX
{
    static public string AsString(this IEnumerable<char> e) { return new string(e.ToArray()); }
    static public string AsJoinedString<T>(this IEnumerable<T> e, string s = " ") { return string.Join(s, e); }
}
// CUT begin
public class Tester: AbstractTester
{
    static public T[] Enumerate<T>(int n, Func<int, T> f) { var a = new T[n]; for (int i = 0; i < n; ++i) a[i] = f(i); return a; }
    public Random rand = new Random(0);
    public Tester()
    {
        var s = "))(()((((()))()(())))(()(())(())(()())((()())(((((()(()(())))())(((())(()))))(()((()((()())))((())())()((((((())(()))(((((()()))(((()()))))))()()()))(()(()(((())()))())((()))())((((()()()))))()(()()(()(())))())))()(())))))))())))(())))((()((((((()))()((()))()()(()()(())()((())()()())))(()(()(((())((((())))((()()(()(()()(()))((()((()(((((((()))))((((()(()()()()()()))(()()))(()(())))))()((()))()))(((()()(()))((())(((((()((()()))())()((())())()()(())(((()))))))())()())())(((((((()))((()())))))(())(()(())(((())(()(())()(()()())((((()((((()()()((()))()(()(((()(()())())))()(()()(()(())((()())())((((()(()())()(()))))(((((()((((())))())))))))(((()(())()()(((()(()()()))(()))(())()(())))()((()())))())(())))()))))())))()()(())())())))(((((())))))))()())(((())((())(()()))()()()()(()))()(((((()(((((()((()((()))())()))()()(())((()((()))()()()((()()))((()()))()))(()))(()))))()()()(()()(()))(()((())((((()()(((()))()))(())()(((()()())(()()())()()(()())(()(((((()())(())((())((()((())((()(())()))()()()))))))))((())))))())()))))()()))(((((()(((()(()((()())(()))())))()()(()))(()())())()()((()))()))()()())((((()()(())))((((((()))()())(()()))(()()()(()))()))(()(()()(())())()))(()()(()(()))))()((()))(())))(())(()((())()((()))))())())))()))(()()))(()))((())))(()))(()()()()))())))()))((())(((()(()(()))()()((()))))(())())()()(((()())(()()()(()()())))(()))((()(((())(())()))))))))))()())(()())()()()((()))))()))(((((()(((((()())))))()))()(((())()))())(()())(()((())))(()())(())(((((()())()())(((())))()()))()))())(()())((())))())())(()()((((())(()(()()((()()()()()(())))()(())((((())(()()))())))())(())))()((()((()()(((()))(()()()())))()(((((()((((((())()(()))(()()))))()(((()((((()))()))(()())(()(()(())))(((())()))(())()()))))()((((()((()))())()((())((((())))))()()()))(()))(((()())))())))()(())())))))))))())((()(())(())(((((()))())()(())((()()()()(()()))())(())(()()()))((()))())((())))((())(()))())(()))(())(()))()()()()((((()())(())))()()))()())((((()((()))((()((())(((((()())(((()((()())((((((()())(";
        var a = new int[] { 92, 92, 1792, 1622, 0, 138, 776, 462, 138, 513, 1576, 662, 820, 1146, 26, 168, 760, 1496, 1806, 0, 532, 1162, 1744, 1818, 92, 1154, 526, 856, 1295, 344, 590, 67, 606, 934, 820, 0, 1736, 1187, 478, 829, 592, 1574, 1752, 1152, 1473, 1755, 1148, 532, 530, 448, 385, 1882, 440, 0, 1862, 1624, 92, 1565, 156, 530, 776, 592, 816, 170, 168, 606, 1628, 842, 462, 836, 1534, 592, 590, 1279, 1574, 480, 842, 844, 112, 977, 834, 156, 186, 596, 67, 808, 480, 92, 590, 192, 1544, 808, 483, 856, 808, 1166, 448, 450, 156, 856, 168, 384, 478, 1312, 957, 1671, 168, 475, 1682, 1778, 800, 1166, 1199, 748, 36, 1059, 1393, 596, 170, 1562, 1570, 170, 1006, 865, 1662, 592, 1195, 196, 170, 134, 813, 489, 1582, 22, 683, 464, 594, 532, 1219, 1354, 842, 134, 1162, 632, 1657, 480, 592, 1146, 440, 192, 808, 1822, 1218, 578, 156, 1375, 1595, 834, 1582, 1738, 602, 1162, 170, 1935, 1526, 156, 860, 36, 860, 26, 1331, 836, 212, 590, 1628, 297, 1526, 186, 1740, 1083, 1840, 596, 776, 1570, 1574, 478, 858, 1624, 26, 1028, 474, 74, 979, 1576, 530, 24, 606, 776, 1818, 188, 1346, 440, 842, 138, 222, 842, 981, 442, 778, 464, 156, 856, 450, 36, 464, 532, 808, 606, 188, 776, 842, 0, 780, 714, 1083, 1154, 1154, 429, 92, 395, 526, 921, 192, 834, 1838, 1219, 450, 138, 170, 349, 168, 138, 602, 464, 442, 165, 138, 92, 687, 1738, 168, 1736, 24, 1793, 1864, 0, 138, 926, 1825, 149, 1526, 419, 760, 188, 746, 464, 192, 110, 301, 384, 192, 606, 1279, 1562, 532, 1905, 1576, 1758, 450, 1746, 156, 594, 606, 602, 844, 392, 1692, 734, 1860, 655, 442, 532, 856, 1576, 858, 1857, 1146, 173, 1754, 442, 578, 41, 1818, 702, 474, 22, 592, 1404, 1574, 1570, 1537, 134, 170, 1548, 55, 776, 192, 856, 1150, 1736, 1171, 748, 1377, 842, 1150, 0, 1544, 602, 1740, 156, 1582, 1609, 1177, 478, 1626, 1491, 440, 606, 1068, 92, 1754, 1806, 117, 1491, 0, 474, 36, 856, 1179, 1187, 168, 776, 858, 1136, 92, 746, 1758, 1923, 192, 902, 836, 36, 24, 1736, 26, 92, 906, 464, 816, 134, 450, 110, 953, 1921, 450, 1146, 1154, 1622, 530, 1548, 168, 1489, 590, 584, 1776, 1546, 442, 192, 1546, 1463, 43, 468, 442, 606, 464, 1443, 26, 92, 1622, 110, 532, 134, 1437, 1907, 168, 526, 606, 1445, 260, 689, 1570, 1562, 1152, 188, 1736, 134, 969, 186, 1365, 611, 738, 462, 778, 1631, 1187, 0, 138, 134, 914, 464, 92, 330, 592, 592, 1624, 1664, 1758, 134, 844, 9, 376, 440, 1580, 602, 844, 1734, 26, 1154, 1154, 820, 1600, 39, 697, 188, 594, 1152, 1452, 530, 1534, 462, 590, 478, 1889, 602, 564, 186, 92, 385, 26, 448, 1698, 252, 448, 1624, 1166, 1746, 168, 1624, 858, 1166, 1746, 1562, 590, 1387, 478, 474, 900, 1548, 110, 26, 156, 1227, 1137, 24, 1582, 606, 450, 22, 1351, 450, 1144, 156, 168, 1574, 808, 536, 1716, 134, 834, 1576, 36, 776, 1806, 1075, 92, 816, 440, 186, 474, 1535, 1548, 0, 1211, 1148, 6, 1572, 24, 1744, 594, 384, 1152, 156, 592, 606, 170, 1534, 156, 491, 440, 1026, 24, 1572, 36, 606, 265, 384, 1493, 1393, 1548, 820, 1746, 860, 1268, 186, 260, 782, 448, 1162, 1144, 450, 1534, 22, 395, 1734, 397, 440, 384, 156, 365, 188, 532, 1274, 834, 1166, 1240, 526, 858, 168, 1731, 0, 36, 1818, 1576, 657, 138, 1152, 864, 192, 450, 1966, 1644, 1880, 1146, 1219, 1154, 860, 518, 1334, 532, 596, 1144, 514, 170, 526, 1171, 462, 188, 1780, 188, 1980, 26, 393, 134, 1548, 160, 478, 110, 606, 470, 1222, 188, 1243, 170, 1431, 1919, 1489, 1740, 532, 462, 0, 596, 1736, 170, 450, 299, 693, 1146, 0, 22, 63, 168, 1336, 462, 860, 602, 920, 1015, 578, 1177, 465, 1603, 1776, 105, 1150, 1140, 22, 932, 110, 1321, 26, 966, 808, 683, 0, 526, 450, 1576, 1937, 1740, 24, 478, 590, 858, 423, 1640, 22, 186, 168, 1166, 606, 1766, 808, 844, 462, 493, 156, 384, 1847, 1766, 1744, 22, 188, 24, 450, 1624, 0, 1758, 526, 499, 1570, 1730, 592, 1162, 237, 442, 1663, 594, 590, 816, 188, 186, 1975, 1256, 606, 592, 1526, 26, 526, 448, 22, 1716, 192, 1162, 1207, 26, 250, 134, 192, 1622, 534, 186, 110, 856, 22, 170, 464, 156, 73, 1181, 1544, 578, 186, 860, 860, 168, 487, 1580, 1572, 26, 384, 532, 487, 1144, 147, 134, 92, 641, 1426, 1152, 156, 92, 1173, 170, 110, 1562, 22, 110, 1746, 842, 24, 450, 1097, 596, 1738, 203, 22, 168, 592, 1792, 761, 758, 462, 234, 1162, 594, 596, 1574, 635, 220, 1792, 186, 530, 1846, 1734, 26, 63, 594, 834, 464, 578, 1763, 22, 739, 464, 578, 442, 606, 1618, 92, 233, 329, 1618, 957, 217, 592, 1766, 984, 1146, 1110, 186, 594, 1267, 816, 1766, 596, 384, 1734, 1281, 1154, 1154, 464, 168, 442, 1744, 56, 1179, 1229, 464, 134, 464, 192, 842, 0, 1734, 949, 1146, 92, 110, 168, 1570, 396, 1548, 776, 384, 134, 26, 1639, 384, 156, 450, 888, 590, 315, 139, 1076, 1648, 36, 1144, 1562, 186, 1146, 1626, 836, 36, 1730, 1754, 1150, 1162, 464, 776, 384, 170, 594, 862, 1271, 858, 462, 820, 578, 1175, 0, 156, 50, 1154, 221, 1177, 1884, 836, 860, 836, 192, 92, 1454, 1075, 534, 596, 110, 1162, 1822, 134, 1943, 1148, 156, 26, 67, 1920, 860, 816, 1534, 578, 606, 526, 776, 110, 834, 594, 1534, 188, 1090, 134, 863, 834, 1663, 1886, 1793, 1730, 462, 22, 442, 263, 860, 384, 820, 594, 594, 186, 1166, 1152, 264, 156, 1626, 168, 260, 1878, 1087, 245, 1622, 1572, 1303, 168, 590, 22, 1730, 170, 1277, 1572, 596, 170, 901, 36, 440, 440, 836, 836, 1282, 1162, 632, 92, 858, 1622, 168, 1276, 1888, 1168, 881, 578, 46, 844, 1452, 448, 26, 331, 183, 1287, 820, 258, 22, 1747, 1337, 384, 1526, 22, 1495, 480, 1911, 1576, 526, 450, 480, 26, 298, 300, 1322, 997, 66, 1152, 419, 36, 590, 578, 1489, 192, 621, 590, 1466, 563, 480, 820, 1221, 808, 120, 1150, 1690, 92, 847, 530, 1335, 168, 578, 969, 384, 532, 1154, 820, 138, 1544, 1730, 526, 326, 464, 1626, 384, 22, 1776, 192, 462, 464, 1105, 702, 1150, 440, 1443, 22, 156, 156, 532, 1416, 1162, 92, 860, 1445, 92, 450, 532, 1404, 480, 192, 480, 448, 1148, 1281, 440, 602, 374, 592, 856, 39, 92, 1626, 856, 1415, 478, 993, 1166, 1280, 1085, 168, 808, 1192, 36, 602, 170, 858, 480, 0, 1154, 836, 1152, 188, 139, 26, 480, 836, 530, 882, 384, 440, 581, 842, 1166, 1148, 192, 1786, 138, 836, 1162, 22, 856, 1144, 464, 532, 776, 450, 440, 1602, 842, 1146, 442, 168, 842, 1534, 1769, 1534, 592, 847, 1622, 1662, 1754, 188, 1120, 1157, 1974, 26, 1177, 776, 24, 138, 138, 116, 110, 1166, 188, 1646, 170, 474, 1148, 1574, 1802, 186, 1060, 442, 110, 590, 776, 1155, 1570, 440, 1548, 26, 969, 1734, 0, 192, 110, 168, 1752, 1673, 820, 440, 634, 480, 156, 1570, 558, 386, 1776, 602, 1211, 259, 1148, 602, 844, 92, 170, 192, 776, 535, 384, 1058, 134, 138, 307, 1265, 1146, 474, 590, 448, 530, 491, 642, 1148, 816, 988, 590, 1574, 442, 384, 1162, 168, 776, 366, 138, 138, 1848, 168, 36, 1667, 24, 1622, 36, 1154, 462, 442, 1548, 1150, 596, 474, 1730, 26, 1390, 1937, 474, 546, 1150, 496, 442, 199, 450, 816, 611, 1752, 590, 474, 1574, 1493, 862, 1279, 1223, 1146, 1425, 834, 186, 1580, 1452, 186, 450, 613, 1744, 342, 1829, 212, 1580, 204, 592, 1597, 856, 478, 138, 384, 1031, 1443, 1582, 26, 1162, 1150, 491, 26, 1738, 579, 808, 860, 682, 1281, 845, 1479, 480, 0, 156, 1580, 1179, 532, 1397, 134, 442, 337, 462, 1166, 1454, 128, 1907, 24, 820, 245, 478, 92, 1572, 283, 834, 1402, 1872, 1162, 592, 347, 1858, 836, 24, 860, 1824, 844, 433, 192, 110, 758, 821, 141, 1546, 0, 858, 1766, 834, 534, 1154, 482, 168, 530, 1878, 849, 1173, 858, 1323, 462, 50, 1572, 26, 474, 464, 1878, 530, 24, 834, 448, 384, 168, 594, 1150, 836, 1152, 1026, 454, 0, 384, 450, 856, 816, 930, 834, 596, 1148, 1215, 134, 442, 1190, 0, 474, 594, 842, 92, 1363, 856, 1471, 1286, 903, 170, 24, 92, 0, 1422, 22, 530, 478, 1911, 836, 188, 1546, 1776, 474, 474, 883, 186, 1309, 134, 1562, 1594, 22, 1221, 856, 110, 546, 988, 1622, 1594, 1626, 1296, 596, 594, 1546, 596, 584, 168, 170, 842, 1576, 834, 1738, 186, 808, 808, 645, 834, 1092, 478, 1563, 844, 836, 1154, 1618, 36, 464, 858, 888, 1148, 188, 820, 450, 552, 1815, 596, 24, 24, 168, 474, 1544, 464, 445, 1582, 380, 170, 384, 1641, 770, 134, 1222, 98, 816, 1144, 578, 594, 1896, 156, 192, 844, 188, 530, 95, 1736, 4, 1217, 24, 549, 1526, 92, 1180, 26, 170, 384, 594, 746, 480, 1081, 474, 231, 550, 36, 450, 526, 1776, 1526, 639, 532, 1099, 530, 586, 110, 606, 24, 1783, 474, 856, 448, 1150, 22, 530, 455, 24, 156, 192, 536, 262, 684, 452, 1622, 1146, 1081, 1562, 1144, 442, 168, 36, 592, 526, 699, 26, 1154, 188, 363, 186, 856, 836, 186, 36, 186, 1570, 168, 1730, 138, 834, 448, 462, 192, 26, 842, 1666, 36, 1734, 1685, 530, 390, 1618, 856, 186, 26, 1546, 530, 474, 602, 36, 170, 578, 594, 138, 36, 808, 442, 1748, 1752, 1162, 842, 1562, 1580, 1871, 592, 526, 480, 530, 452, 685, 526, 596, 474, 188, 448, 474, 1146, 1088, 602, 384, 214, 861, 384, 1526, 1843, 1752, 834, 448, 748, 6, 1544, 462, 606, 448, 1179, 532, 0, 1150, 450, 1, 0, 1043, 138, 649, 480, 590, 450, 478, 1200, 36, 1572, 578, 279, 1770, 93, 1548, 0, 578, 704, 984, 1792, 474, 464, 808, 1909, 1144, 1730, 1526, 156, 410, 1146, 592, 168, 189, 205, 440, 834, 110, 192, 596, 440, 442, 1946, 856, 448, 1527, 26, 110, 776, 1738, 1479, 448, 756, 639, 1068, 263, 966, 22, 590, 842, 530, 912, 168, 1150, 816, 384, 1148, 36, 1912, 1746, 139, 24, 264, 0, 450, 1179, 36, 1215, 384, 448, 440, 602, 462, 1883, 844, 1451, 532, 842, 979, 134, 192, 171, 592, 188, 1426, 197, 464, 1281, 110, 636, 208, 1880, 217, 1526, 1152, 1166, 263, 138, 1162, 1795, 808, 22, 1726, 464, 186, 474, 530, 26, 1781, 450, 808, 1738, 442, 663, 157, 24, 1762, 92, 1534, 532, 578, 512, 36, 92, 0, 442, 92, 1819, 138, 842, 578, 752, 464, 1570, 1207, 188, 943, 526, 856, 440, 138, 592, 480, 442, 1148, 844, 448, 1872, 134, 842, 834, 168, 530, 307, 860, 450, 110, 590, 606, 24, 532, 808, 858, 1546, 450, 836, 26, 635, 1081, 858, 1152, 448, 188, 1562, 1622, 24, 1238, 234, 1106, 526, 1572, 22, 24, 653, 92, 0, 970, 820, 1754, 1526, 666, 1168, 474, 392, 532, 384, 796, 92, 448, 65, 168, 1105, 776, 808, 170, 263, 464, 168, 1878, 1154, 168, 1218, 1574, 590, 836, 0, 642, 117, 735, 816, 134, 1217, 374, 1648, 1150, 110, 188, 1814, 1225, 594, 1939, 1321, 708, 1179, 448, 1162, 596, 1277, 530, 1546, 1184, 1624, 1618, 0, 1419, 317, 0, 1968, 639, 820, 36, 590, 1752, 186, 478, 691, 92, 1150, 1412, 939, 138, 836, 1148, 92, 526, 1683, 594, 1548, 1814, 192, 432, 856, 642, 188, 24, 186, 0, 1730, 24, 1152, 84, 820, 1526, 474, 1406, 1779, 1776, 26, 1150, 974, 168, 478, 138, 1935, 442, 92, 1212, 192, 193, 1526, 275, 1968, 590, 36, 464, 1570, 910, 450, 440, 606, 530, 1758, 530, 860, 1734, 168, 1622, 674, 26, 450, 776, 1526, 532, 1574, 836, 204, 1582, 646, 1162, 1162, 464, 480, 22, 41, 450, 450, 1740, 116, 188, 1562, 1740, 1580, 690, 1148, 170, 1152, 440, 590, 134, 1618, 776, 1508, 138, 1882 };
        var b = new int[] { 577, 833, 1813, 1625, 1533, 1561, 1999, 477, 1525, 516, 1617, 665, 1533, 1525, 1751, 191, 769, 1497, 1821, 1543, 1733, 1625, 1761, 1821, 819, 1545, 1817, 1569, 1298, 345, 1837, 76, 1147, 935, 1765, 185, 1745, 1214, 1751, 830, 855, 1791, 1753, 1571, 1474, 1756, 1765, 1765, 1617, 1525, 438, 1985, 807, 591, 1991, 1821, 1745, 1566, 577, 1625, 1733, 835, 1737, 593, 595, 1805, 1725, 1745, 1545, 1569, 1761, 1153, 1625, 1360, 1761, 1765, 1757, 1729, 127, 1010, 1579, 441, 1625, 1765, 70, 1561, 1791, 1791, 1757, 1621, 1737, 1149, 484, 1533, 835, 1737, 843, 1149, 1149, 1161, 601, 859, 807, 1313, 958, 1676, 819, 476, 1709, 1789, 801, 1813, 1204, 753, 1579, 1066, 1396, 1575, 819, 1813, 1625, 447, 1007, 866, 1715, 1621, 1204, 379, 807, 1161, 814, 510, 1623, 1161, 728, 1543, 1999, 1165, 1220, 1355, 1823, 477, 1791, 755, 1658, 1573, 1737, 1579, 1753, 1625, 1745, 1823, 1423, 1573, 835, 1380, 1598, 1543, 1805, 1839, 1735, 1621, 1753, 1950, 1575, 1813, 1525, 1821, 1839, 109, 1358, 1813, 255, 593, 1727, 340, 1561, 1153, 1839, 1104, 1999, 1805, 1753, 1735, 1817, 815, 1149, 1837, 1791, 1029, 593, 75, 980, 1999, 1839, 1813, 1569, 1153, 1823, 1739, 1353, 591, 1821, 857, 223, 1145, 982, 605, 803, 1813, 191, 1543, 807, 833, 1625, 593, 1165, 1525, 1561, 1735, 1579, 473, 803, 715, 1108, 1737, 1617, 430, 383, 404, 1745, 922, 1533, 1145, 1839, 1394, 1813, 1791, 1757, 350, 1737, 169, 1743, 1821, 1733, 166, 1575, 1823, 698, 1751, 843, 1817, 1839, 1804, 1991, 1579, 1569, 1039, 1834, 152, 1757, 422, 771, 1165, 747, 841, 1805, 1733, 306, 1761, 1617, 1775, 1372, 1729, 1143, 1910, 1737, 1813, 1837, 1775, 531, 1739, 1625, 1145, 1147, 407, 1695, 737, 1991, 656, 473, 1743, 1757, 1761, 1765, 1992, 1753, 182, 1805, 1813, 1533, 64, 1839, 709, 589, 1775, 1143, 1411, 1823, 1813, 1542, 1525, 1145, 1745, 58, 807, 1737, 859, 1733, 1743, 1512, 751, 1380, 1753, 1625, 1821, 1561, 1999, 1823, 1733, 1733, 1610, 1478, 1821, 1757, 1504, 479, 1575, 1139, 857, 1757, 1813, 118, 1506, 1737, 1839, 1145, 1805, 1214, 1448, 1575, 1737, 1753, 1141, 531, 753, 1765, 1924, 461, 1045, 1145, 1775, 855, 1757, 1545, 807, 923, 1569, 1533, 1813, 819, 819, 954, 1928, 589, 1821, 1753, 1839, 1623, 1757, 593, 1494, 1153, 587, 1821, 1623, 589, 529, 1823, 1468, 64, 471, 819, 855, 531, 1448, 1753, 855, 1751, 1729, 841, 1805, 1440, 1962, 1623, 591, 1165, 1450, 341, 696, 1579, 1743, 1621, 449, 1775, 1837, 1014, 1745, 1370, 620, 741, 529, 779, 1632, 1450, 815, 1821, 1817, 917, 1151, 447, 335, 1579, 1145, 1745, 1677, 1817, 1561, 1143, 10, 377, 835, 1625, 1765, 1617, 1751, 1999, 1625, 1165, 1573, 1613, 90, 710, 1533, 1161, 1581, 1453, 577, 1579, 1575, 1821, 525, 1890, 775, 567, 463, 1625, 426, 1623, 1765, 1699, 253, 1729, 1737, 1623, 1839, 1729, 1743, 1621, 1573, 1753, 1737, 1839, 1388, 605, 1743, 1047, 1729, 1561, 531, 1625, 1234, 1138, 775, 1757, 815, 531, 23, 1352, 1161, 1999, 819, 1525, 1813, 1735, 541, 1717, 155, 1617, 1743, 1813, 1569, 1823, 1118, 1533, 1753, 531, 531, 525, 1536, 1751, 1573, 1424, 1575, 13, 1739, 1573, 1839, 1149, 1161, 1805, 1569, 1147, 1753, 1625, 1561, 1837, 492, 595, 1029, 439, 1735, 841, 1729, 270, 1545, 1506, 1398, 1775, 1729, 1999, 1733, 1275, 1823, 355, 801, 1805, 1623, 1839, 1999, 1823, 1813, 406, 1753, 402, 441, 601, 1775, 378, 1737, 595, 1381, 1569, 1621, 1247, 1757, 1575, 1745, 1732, 461, 1569, 1837, 1805, 658, 841, 1617, 871, 1525, 859, 1985, 1659, 1985, 1739, 1398, 1839, 1757, 519, 1353, 1575, 835, 1625, 515, 1575, 1547, 1172, 531, 1579, 1787, 1571, 1983, 439, 404, 595, 1821, 161, 775, 1569, 1791, 471, 1389, 1569, 1244, 1165, 1434, 1960, 1506, 1775, 1579, 859, 1571, 1581, 1761, 857, 479, 324, 694, 1751, 1739, 589, 64, 1143, 1343, 807, 1761, 1733, 923, 1016, 1839, 1506, 472, 1612, 1805, 106, 1581, 1141, 461, 937, 833, 1372, 1581, 1025, 819, 716, 1149, 1145, 525, 1623, 1942, 1745, 1617, 1579, 1761, 1839, 424, 1645, 1791, 1561, 1151, 1999, 1735, 1821, 1143, 1733, 1823, 494, 383, 1151, 1994, 1823, 1745, 1149, 1745, 529, 1729, 1817, 1751, 1761, 1543, 502, 1805, 1817, 1757, 1575, 238, 591, 1714, 841, 1533, 1999, 1617, 1761, 1976, 1257, 775, 1623, 1729, 1743, 855, 819, 1999, 1719, 1999, 1757, 1210, 1745, 253, 169, 593, 1837, 571, 835, 1743, 1765, 1761, 477, 1581, 1735, 76, 1182, 1623, 1151, 479, 1569, 1737, 1757, 520, 1999, 1729, 449, 591, 1839, 494, 1813, 150, 1775, 1571, 742, 1435, 1791, 1999, 187, 1510, 529, 1147, 1839, 859, 843, 1837, 1999, 1533, 857, 1098, 859, 1743, 360, 1751, 589, 1533, 1805, 766, 769, 833, 235, 1739, 1805, 1745, 1581, 742, 229, 1839, 1525, 1743, 1995, 1737, 819, 78, 843, 859, 815, 859, 1764, 167, 740, 819, 835, 1729, 1737, 1839, 109, 242, 340, 1729, 962, 232, 859, 1837, 991, 1561, 1111, 1813, 595, 1382, 1575, 1791, 1149, 1579, 1739, 1316, 1581, 1729, 1579, 1743, 1581, 1751, 57, 1444, 1230, 1805, 855, 1143, 605, 1817, 441, 1791, 964, 1573, 1543, 859, 169, 1729, 403, 1617, 1757, 529, 1581, 1579, 1720, 1737, 1581, 1561, 893, 595, 324, 146, 1079, 1649, 1999, 1617, 1621, 775, 1151, 1765, 1765, 1545, 1839, 1839, 1569, 1729, 859, 1765, 479, 1151, 1813, 879, 1272, 1729, 1561, 1525, 1743, 1494, 841, 479, 59, 1821, 224, 1490, 1885, 1823, 1745, 1735, 1153, 1999, 1457, 1122, 557, 1145, 591, 1533, 1839, 775, 1948, 1569, 593, 1543, 72, 1933, 1805, 1743, 1621, 807, 1153, 859, 1525, 1735, 1581, 807, 1743, 589, 1093, 1999, 874, 1745, 1678, 1893, 1794, 1837, 1757, 479, 1145, 282, 1743, 463, 857, 1761, 605, 1545, 1839, 1561, 277, 815, 1739, 1821, 343, 1895, 1094, 254, 1821, 1737, 1304, 1837, 1729, 1765, 1745, 473, 1320, 1753, 1813, 479, 1046, 1733, 1823, 1821, 1143, 1573, 1307, 1735, 759, 1733, 1761, 1817, 1765, 1373, 1893, 1515, 1048, 857, 49, 1753, 1455, 1165, 525, 334, 184, 1288, 1761, 357, 1745, 1750, 1338, 857, 1837, 383, 1506, 1151, 1962, 1579, 1545, 1765, 591, 1735, 327, 313, 1327, 998, 77, 1623, 424, 1839, 1147, 1143, 1504, 1573, 622, 601, 1467, 568, 1149, 1733, 1398, 815, 125, 1165, 1701, 815, 854, 1165, 1344, 1751, 601, 1022, 1569, 577, 1735, 1147, 775, 1745, 1735, 1533, 327, 1761, 1821, 1729, 133, 1791, 383, 1581, 1573, 1116, 707, 1757, 477, 1450, 1147, 1545, 843, 1561, 1417, 1817, 1545, 1625, 1448, 473, 1821, 855, 1405, 1545, 447, 1561, 1739, 1729, 1310, 1575, 857, 375, 833, 1813, 88, 167, 1735, 1791, 1420, 601, 1000, 1817, 1319, 1116, 1569, 1729, 1205, 1735, 1761, 843, 1547, 1617, 531, 1561, 1791, 1729, 1805, 150, 591, 1837, 1151, 1775, 1047, 1999, 815, 588, 1617, 1757, 1739, 1147, 1787, 1543, 1743, 1805, 591, 1545, 1743, 857, 1775, 1581, 1165, 1745, 1613, 1733, 1837, 1575, 461, 1813, 1733, 1774, 1547, 1545, 848, 1765, 1717, 1821, 1545, 1121, 1158, 1983, 1733, 1488, 1739, 835, 1757, 1621, 127, 529, 1837, 855, 1659, 859, 479, 1817, 1751, 1803, 1149, 1065, 1743, 1837, 1775, 1813, 1160, 1751, 605, 1733, 1151, 1024, 1805, 601, 1149, 593, 775, 1823, 1674, 1143, 1761, 749, 1805, 449, 1573, 571, 389, 1813, 1823, 1444, 356, 1733, 1839, 1561, 1621, 1751, 859, 1571, 544, 775, 1139, 1791, 807, 312, 1382, 1569, 1775, 605, 1153, 1735, 494, 681, 1571, 1765, 991, 819, 1575, 1765, 1805, 1543, 1817, 1149, 373, 1143, 187, 1993, 1733, 1575, 1668, 1579, 1729, 1805, 1743, 1743, 463, 1621, 1775, 1791, 841, 1775, 1617, 1391, 1938, 855, 575, 1823, 507, 1625, 360, 1817, 1545, 622, 1999, 1579, 1753, 1821, 1494, 877, 1320, 1382, 1813, 1448, 1737, 191, 1581, 1457, 1735, 461, 616, 1791, 345, 1830, 243, 1817, 209, 1751, 1598, 1737, 531, 1813, 1765, 1036, 1444, 1745, 833, 1737, 1753, 522, 859, 1999, 580, 1621, 1837, 741, 1308, 854, 1504, 531, 1791, 1573, 1617, 1424, 1151, 1398, 577, 857, 340, 601, 1821, 1455, 129, 1964, 185, 1735, 248, 859, 835, 1617, 286, 1805, 1421, 1875, 1837, 1765, 354, 1865, 1547, 815, 1821, 1839, 1821, 436, 1545, 1149, 759, 822, 142, 1729, 1625, 1623, 1775, 1625, 545, 1745, 485, 185, 1729, 1985, 852, 1512, 1143, 1324, 1839, 61, 1751, 479, 1621, 1617, 1879, 859, 601, 1621, 479, 1547, 1533, 1823, 1813, 1525, 1739, 1027, 457, 833, 461, 1805, 1579, 855, 931, 1817, 1525, 1823, 1424, 593, 843, 1193, 463, 843, 1147, 1735, 1757, 1364, 1145, 1474, 1307, 1044, 841, 191, 529, 1547, 1423, 1625, 1151, 1561, 1964, 843, 1581, 1775, 1823, 1581, 1757, 898, 1837, 1318, 1145, 1791, 1613, 1579, 1396, 1823, 1823, 561, 1001, 1791, 1601, 1999, 1297, 857, 1533, 1821, 1147, 585, 1813, 855, 1775, 1765, 1999, 1823, 1543, 1739, 833, 668, 1757, 1093, 479, 1564, 1571, 1625, 1761, 1765, 1151, 1737, 1837, 895, 1751, 461, 1737, 1733, 555, 1816, 1153, 187, 1805, 1153, 1813, 1757, 601, 446, 1621, 381, 1737, 1623, 1642, 771, 1579, 1391, 101, 1729, 1765, 589, 857, 1985, 1805, 1761, 1743, 441, 775, 102, 1823, 15, 1448, 447, 556, 1743, 593, 1185, 1569, 449, 1143, 1165, 751, 1739, 1126, 857, 232, 551, 1165, 1533, 593, 1817, 1571, 744, 775, 1102, 819, 587, 589, 1621, 591, 1784, 1791, 1617, 1821, 1151, 155, 1561, 456, 1751, 1621, 1775, 537, 289, 715, 457, 1739, 1533, 1118, 1817, 1533, 593, 1145, 447, 819, 843, 712, 1575, 1739, 531, 364, 1571, 1745, 1805, 525, 525, 383, 1623, 1573, 1805, 1623, 843, 1625, 775, 449, 577, 1623, 1669, 1153, 1823, 1702, 1579, 425, 1625, 1821, 1839, 167, 1571, 1547, 833, 1545, 775, 1805, 593, 1837, 1729, 1791, 1733, 855, 1749, 1761, 1775, 1153, 1745, 1761, 1986, 1165, 775, 833, 1543, 459, 696, 589, 1617, 1579, 1543, 857, 1739, 1761, 1091, 1821, 441, 215, 1142, 439, 1745, 1996, 1791, 1149, 463, 749, 7, 1817, 1775, 1581, 529, 1216, 605, 1525, 1765, 1543, 20, 187, 1044, 1737, 650, 835, 1823, 1147, 1143, 1201, 589, 1625, 1571, 284, 1773, 94, 1571, 859, 605, 705, 987, 1817, 1737, 775, 1147, 1910, 1791, 1823, 1547, 1839, 417, 1149, 1821, 1147, 190, 206, 525, 1729, 169, 463, 1737, 1147, 1735, 1947, 1775, 1543, 1532, 1561, 133, 1729, 1775, 1488, 449, 771, 640, 1141, 284, 1027, 1735, 1151, 1739, 1765, 923, 1823, 1525, 1147, 1625, 1573, 1547, 1913, 1821, 152, 449, 271, 383, 1751, 1210, 473, 1442, 807, 1775, 1579, 1143, 1761, 1894, 1145, 1458, 1817, 1737, 982, 1147, 1821, 184, 593, 1153, 1441, 378, 833, 1318, 1161, 637, 359, 1965, 242, 1999, 1625, 1735, 288, 1573, 1761, 1804, 1575, 1153, 1727, 1753, 529, 1745, 1817, 593, 1784, 1625, 1625, 1791, 595, 664, 162, 167, 1999, 1561, 1569, 1735, 1837, 519, 595, 1547, 1561, 1545, 1729, 1820, 1153, 1575, 1153, 753, 479, 1743, 1216, 1765, 944, 1821, 1571, 577, 601, 595, 1161, 1839, 1525, 1751, 477, 1873, 1823, 1569, 1525, 1839, 1757, 308, 1153, 1623, 155, 1547, 1839, 1791, 1729, 1161, 1735, 1561, 1761, 841, 1165, 638, 1124, 1525, 1161, 1757, 595, 1575, 1775, 1581, 1245, 239, 1107, 1617, 1999, 819, 1525, 668, 1821, 589, 971, 843, 1791, 1753, 667, 1517, 859, 425, 859, 1153, 801, 1575, 1737, 82, 1543, 1112, 859, 1573, 1579, 278, 473, 1545, 1965, 1813, 577, 1401, 1623, 591, 1575, 109, 737, 126, 736, 1823, 1757, 1458, 377, 1655, 1729, 463, 383, 1817, 1250, 1625, 1944, 1360, 709, 1458, 1761, 1745, 775, 1328, 1739, 1733, 1185, 1729, 1757, 1757, 1420, 318, 167, 1979, 742, 1751, 191, 1621, 1757, 1737, 1145, 692, 1143, 1617, 1423, 1036, 1617, 1543, 1621, 1775, 1165, 1708, 1151, 1569, 1821, 439, 437, 1743, 733, 815, 1623, 1147, 525, 1737, 819, 1743, 87, 1547, 1623, 835, 1411, 1788, 1837, 1837, 1579, 1011, 439, 1757, 191, 1952, 835, 1149, 1213, 601, 382, 1621, 276, 1983, 1999, 1739, 1823, 1791, 919, 835, 1791, 859, 1525, 1805, 1573, 1581, 1765, 1739, 1733, 675, 1821, 1525, 835, 1823, 1737, 1625, 1821, 207, 1837, 651, 1821, 1581, 1729, 1813, 593, 80, 1573, 1735, 1805, 129, 1735, 1625, 1753, 1757, 695, 1753, 191, 1165, 1543, 1765, 859, 1817, 843, 1509, 1735, 1903 };



    test.ManualTest(s, a, b);

    }
}
// CUT end

#region Compair
static public class Pair
{
    static public Pair<FT, ST> Create<FT, ST>(FT f, ST s)
        where FT : IComparable<FT>
        where ST : IComparable<ST>
    { return new Pair<FT, ST>(f, s); }
    static public Pair<FT, ST> Min<FT, ST>(Pair<FT, ST> p, Pair<FT, ST> q)
        where FT : IComparable<FT>
        where ST : IComparable<ST>
    { return (p.CompareTo(q) <= 0) ? p : q; }
    static public Pair<FT, ST> Max<FT, ST>(Pair<FT, ST> p, Pair<FT, ST> q)
        where FT : IComparable<FT>
        where ST : IComparable<ST>
    { return (p.CompareTo(q) >= 0) ? p : q; }
}
public class Pair<FT, ST>: IComparable<Pair<FT, ST>>
    where FT : IComparable<FT>
    where ST : IComparable<ST>
{
    public FT x;
    public ST y;
    public Pair(FT f, ST s) { x = f; y = s; }

    public int CompareTo(Pair<FT, ST> other)
    {
        var cmp = x.CompareTo(other.x);
        return cmp != 0 ? cmp : y.CompareTo(other.y);
    }
    public override string ToString() { return string.Format("{0} {1}", x, y); }
}
#endregion