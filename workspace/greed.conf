greed {
    
    codeRoot    = ""
    

    logging {
        logLevel    = OFF
        logToStderr = true
        logFolder   = Logs
    }

    backup {
        fileCountLimit = 3
        fileName = "${GeneratedFileName}.bak.${BackupNumber}"
    }

    shared {
        templateDef {
            include "template-defs"
            config{
                override = false
                overwrite = force
                outputFile = "conf.config"
                templateFile= config.tmpl
            }

        }

        defaultLanguage {
            templates = [ source, filetest, problem-desc ]
            submitTemplate = source
        }

        cstyleLanguage = ${greed.shared.defaultLanguage} {
            cutBegin = "// CUT begin"
            cutEnd = "// CUT end"
        }
    }

    language {
        cpp = ${greed.shared.cstyleLanguage} {
            longIntTypeName = long long

            templateDef = ${greed.shared.templateDef} {
                filetest.templateFile = builtin(filetest/cpp.tmpl)
                test {
                    templateFile = builtin(test/cpp.tmpl)
                    options {
                        cpp11 = false
                        runMultipleProcesses = false
                    }
                }
                dualcolor-test.templateFile = builtin(dualcolor/main.cpp.tmpl)
                dualcolor-tester.templateFile = builtin(dualcolor/tester.cpp.tmpl)
                dualcolor-tester.outputFileExtension = cpp
                source.templateFile = builtin(source/cpp.tmpl)
                source.outputFileExtension = cpp
                problem-desc.options.showDefinition = cpp
            }
        }

        java = ${greed.shared.cstyleLanguage} {
            templateDef = ${greed.shared.templateDef} {
                filetest.templateFile = builtin(filetest/java.tmpl)
                test.templateFile = builtin(test/java.tmpl)
                source.templateFile = builtin(source/java.tmpl)
                source.outputFileExtension = java
                unittest.templateFile = builtin(unittest/junit.java.tmpl)
                unittest.outputFileExtension = java
                problem-desc.options.showDefinition = java
            }
        }

        csharp = ${greed.shared.cstyleLanguage}  {
            templates = [config, unittest, source, problem-desc]
            templateDef = ${greed.shared.templateDef} {
                test.templateFile = builtin(test/cs.tmpl)
                testcase.outputFile = "${Contest.Name}/${Problem.Name}.sample"
                source.templateFile = source_cs.tmpl
                source.outputFileName = "${Contest.Name}/${Problem.Name}"
                source.outputFileExtension = cs
                unittest.templateFile = unittest.tmpl
                unittest.outputFileExtension = cs
                unittest.outputFileName = "${Contest.Name}/${Problem.Name}Test"
                problem-desc.outputFile = "${Contest.Name}/${Problem.Name}.html"
                problem-desc.options.showDefinition = csharp
            }

        }

        python = ${greed.shared.defaultLanguage}  {
            cutBegin = "# CUT begin"
            cutEnd = "# CUT end"

            templateDef = ${greed.shared.templateDef} {
                filetest.templateFile = builtin(filetest/py.tmpl)
                test.templateFile = builtin(test/py.tmpl)
                dualcolor-test.templateFile = builtin(dualcolor/main.py.tmpl)
                dualcolor-tester.templateFile = builtin(dualcolor/tester.py.tmpl)
                dualcolor-tester.outputFileExtension = py
                source.templateFile = builtin(source/py.tmpl)
                source.outputFileExtension = py
                unittest.templateFile = builtin(unittest/unittest.py.tmpl)
                unittest.outputFileExtension = py
                problem-desc.options.showDefinition = python
            }

        }
    }
}
